<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AnalysisUIOptions">
    <option name="SCOPE_TYPE" value="3" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="b0496aaa-cdd3-48da-9997-1a22298cde73" name="Default Changelist" comment="하는중">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/Practicing-Java-and-Git/Main.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Practicing-Java-and-Git/Main.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Main.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="PUSH_AUTO_UPDATE" value="true" />
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2135rX1w0HuR7RH1xN46edl6lh5" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
    <option name="showVisibilityIcons" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="ASKED_SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="last.edited.regexp" value="[1,3,4,5]" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/src/Queue/Card2.java" />
    <property name="project.structure.last.edited" value="모듈" />
    <property name="project.structure.proportion" value="0.0" />
    <property name="project.structure.side.proportion" value="0.0" />
    <property name="run.code.analysis.last.selected.profile" value="pProject Default" />
    <property name="settings.editor.selected.configurable" value="preferences.keymap" />
    <property name="two.files.diff.last.used.file" value="$PROJECT_DIR$/src/Queue/Card2.java" />
  </component>
  <component name="RunManager" selected="애플리케이션.Main">
    <configuration name="BallEscape4" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="Simulation.BallEscape4" />
      <module name="Practicing-Java-and-Git" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="Simulation.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="HideAndSeek3" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="GraphTheory.HideAndSeek3" />
      <module name="Practicing-Java-and-Git" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="GraphTheory.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="Main" />
      <module name="Practicing-Java-and-Git" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="SegmentCross1" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="Geometry.SegmentCross1" />
      <module name="Practicing-Java-and-Git" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="Geometry.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="StairNumber" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="DP.StairNumber" />
      <module name="Practicing-Java-and-Git" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="DP.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="애플리케이션.Main" />
      <item itemvalue="애플리케이션.HideAndSeek3" />
      <item itemvalue="애플리케이션.StairNumber" />
      <item itemvalue="애플리케이션.SegmentCross1" />
      <item itemvalue="애플리케이션.BallEscape4" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="애플리케이션.Main" />
        <item itemvalue="애플리케이션.BallEscape4" />
        <item itemvalue="애플리케이션.SegmentCross1" />
        <item itemvalue="애플리케이션.StairNumber" />
        <item itemvalue="애플리케이션.HideAndSeek3" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="b0496aaa-cdd3-48da-9997-1a22298cde73" name="Default Changelist" comment="" />
      <created>1637157129708</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1637157129708</updated>
    </task>
    <task id="LOCAL-00243" summary="하는중">
      <created>1674807828488</created>
      <option name="number" value="00243" />
      <option name="presentableId" value="LOCAL-00243" />
      <option name="project" value="LOCAL" />
      <updated>1674807828488</updated>
    </task>
    <task id="LOCAL-00244" summary="백준 1644번 소수의 연속합 정수론 문제&#10;&#10;누적합으로 풀었음, 굳이 투 포인터 쓸 필요도 없이 큐에다가 누적합을 넣어서 n값과 비교하는 방법을 썼음.">
      <created>1675043982757</created>
      <option name="number" value="00244" />
      <option name="presentableId" value="LOCAL-00244" />
      <option name="project" value="LOCAL" />
      <updated>1675043982757</updated>
    </task>
    <task id="LOCAL-00245" summary="하는중">
      <created>1675059018909</created>
      <option name="number" value="00245" />
      <option name="presentableId" value="LOCAL-00245" />
      <option name="project" value="LOCAL" />
      <updated>1675059018909</updated>
    </task>
    <task id="LOCAL-00246" summary="백준 1647번 도시 분할 계획 MST문제&#10;&#10;MST 문제 소스에 썼던 크루스칼을 그대로 들고왔음. 그걸 좀 개선한게 이번 코드임.&#10;&#10;vertex 클래스를 없애고 단순히 배열로 저장하게 만들었음. find_cycle 함수를 살짝 고쳐서 재귀로 바꿨음. 재귀를 돌리면서 계속 plist값을 갱신할 수 있게끔 만들어서 한번 호출하고 나서 시간을 줄일 수 있게 했음.">
      <created>1675231972655</created>
      <option name="number" value="00246" />
      <option name="presentableId" value="LOCAL-00246" />
      <option name="project" value="LOCAL" />
      <updated>1675231972655</updated>
    </task>
    <task id="LOCAL-00247" summary="백준 1647번 도시 분할 계획 MST문제&#10;&#10;크루스칼 말고 프림으로 풀어봄.">
      <created>1675233932875</created>
      <option name="number" value="00247" />
      <option name="presentableId" value="LOCAL-00247" />
      <option name="project" value="LOCAL" />
      <updated>1675233932875</updated>
    </task>
    <task id="LOCAL-00248" summary="백준 1766번 문제집 위상정렬 문제&#10;&#10;단순한 위상정렬로 풀었음. 각자 가리키는 수를 link에 저장해놓고, 나를 가리키는 간선이 몇개 있는지는 In_Degree에 저장되어있음. In_d가 0인 수부터 시작해서(여기서 해시 셋으로 우선순위 큐에 바로 넣었음) 만약 In_d가 0이 되면 우선순위 큐에 넣는걸 반복(풀 수 있는 가장 쉬운 문제집부터 품).">
      <created>1675236649157</created>
      <option name="number" value="00248" />
      <option name="presentableId" value="LOCAL-00248" />
      <option name="project" value="LOCAL" />
      <updated>1675236649157</updated>
    </task>
    <task id="LOCAL-00249" summary="하는중">
      <created>1675238856909</created>
      <option name="number" value="00249" />
      <option name="presentableId" value="LOCAL-00249" />
      <option name="project" value="LOCAL" />
      <updated>1675238856909</updated>
    </task>
    <task id="LOCAL-00250" summary="하는중">
      <created>1675325370877</created>
      <option name="number" value="00250" />
      <option name="presentableId" value="LOCAL-00250" />
      <option name="project" value="LOCAL" />
      <updated>1675325370878</updated>
    </task>
    <task id="LOCAL-00251" summary="백준 1799번 비숍 백트래킹 문제&#10;&#10;일종의 DFS로 풀었음. 우하단 방향 대각선이랑, 우상단 대각선을 성분으로 가짐&#10;index 값은 몇 번쨰 우상단 대각선인지가 나오고, list[index] 안의 값은 우상단 대각선들이 몇번째 우하단 방향 대각선 위에 있는지를 저장하고 있음. 약간 그리디처럼 우상단 대각선에서 선택할 수 있으면 무조건 비숍을 놓는게 유리함 (안 놓을 이유가 없음 왜냐면 어지간해서는 다른 비숍과 겹치지 않게 놓을 수 있으므로). 따라서 모두 겹쳐서 못놓거나 애초에 대각선에 비숍을 못넣는 경우만 다음으로 넘겨주면 됨.&#10;&#10;여기서 메모리 초과 발생&#10;&#10;생각해보니 좌하단 대각선이 겹치려면 우상단 대각선의 간격이 만들어져야됨 -&gt; 어? 그럼 체스판을 사실상 반으로 분할해서 풀 수 있는거 아님? -&gt; 했더니 메모리 초과 해결됨.&#10;&#10;방문체크도 할까 했는데 경우의 수가 너무 많음.">
      <created>1675399218747</created>
      <option name="number" value="00251" />
      <option name="presentableId" value="LOCAL-00251" />
      <option name="project" value="LOCAL" />
      <updated>1675399218747</updated>
    </task>
    <task id="LOCAL-00252" summary="백준 1806번 부분합 부분 합 문제&#10;&#10;소수의 연속 합과 풀이 자체는 거의 비슷함. 대신 주어진 s 값 &quot;이상&quot; 이 되는 부분합임.">
      <created>1675408444689</created>
      <option name="number" value="00252" />
      <option name="presentableId" value="LOCAL-00252" />
      <option name="project" value="LOCAL" />
      <updated>1675408444689</updated>
    </task>
    <task id="LOCAL-00253" summary="백준 1987번 알파벳 백트래킹 문제&#10;&#10;아주 간단한 백트래킹임. 해시로 중복 체크함.">
      <created>1675732041681</created>
      <option name="number" value="00253" />
      <option name="presentableId" value="LOCAL-00253" />
      <option name="project" value="LOCAL" />
      <updated>1675732041681</updated>
    </task>
    <task id="LOCAL-00254" summary="백준 2098번 외판원 순회 DP문제&#10;&#10;야호 내가 해냈다. 비트마스킹으로 각 도시의 방문 여부를 체크함. DP를 통해서 먼저 모든 도시를 방문하고 0으로 돌아올 수 있는지를 DFS로 얻어내고, 가능할 경우 그 경로에 있는 모든 비용을 더해주는 방식임. &#10;처음엔 DP[i][k] 값을 합산해줬는데 이럴 경우 처음 출발지(0,1)에서 정답이 나오는 경우 상관없지만 나중가면 점차 합산된 수가 누적되므로 무조건 틀림.&#10;다음은 dp[i][k] 값을 메모해뒀는데, 처음 구현일때는 함수의 인수로 이번 경로의 코스트를 입력받고 dp[i][k]에 저장했음. 이럴 경우 dp[i][k]에서의 최소 비용 + j -&gt; i 까지의 경로 비용이 dp[i][k]에 저장되므로 나중에 메모된 값을 참고할떄 경로 비용때문에 원하는 값을 얻어내지 못함. 따라서 인수에 있는 cost는 지워주고 전 단계에서 경로 비용을 계산하게 바꿨더니 통과.">
      <created>1675814960519</created>
      <option name="number" value="00254" />
      <option name="presentableId" value="LOCAL-00254" />
      <option name="project" value="LOCAL" />
      <updated>1675814960519</updated>
    </task>
    <task id="LOCAL-00255" summary="백준 두 배열의 합 2143번 누적 합 문제&#10;&#10;두 개의 배열을 받아와서 두 배열의 합이 t가 될 수 있게 하는 문제&#10;&#10;해시 맵을 3개 써서&#10;temp에는 1 부터 n 까지의 누적합들이 들어가있음&#10;다음 입력이 들어올때마다 temp에 저장되어있는 값을 전부 빼면서 Sum_count에 넣어주면 a 배열에서 만들 수 있는 모든 누적합과 개수가 나오게 됨. b 배열에도 같은 일을 하고, a 배열의 key 값 하나에 대해 b 배열에서 t -key값을 가지면 그 개수를 넣어주면 됨.* 경우의 수이므로 곱해줘야됨 * 그런데 곱했을 경우 int 범위를 넘어갈 가능성이 있기때문에 long으로 처리했음.">
      <created>1675834694379</created>
      <option name="number" value="00255" />
      <option name="presentableId" value="LOCAL-00255" />
      <option name="project" value="LOCAL" />
      <updated>1675834694379</updated>
    </task>
    <task id="LOCAL-00256" summary="하는중">
      <created>1675843588822</created>
      <option name="number" value="00256" />
      <option name="presentableId" value="LOCAL-00256" />
      <option name="project" value="LOCAL" />
      <updated>1675843588822</updated>
    </task>
    <task id="LOCAL-00257" summary="백준 2162번 선분 그룹 기하하하하하학 문제&#10;&#10;선분 교차 판정 알고리즘 + UnionFind 섞은 문제&#10;&#10;선분 교차 판정은 -&gt; CCW 알고리즘을 써서 판정을 내림. 선분의 양 끝점 네개에서 세개를 뽑아서 외적을 구함(CCW 판정) 두 외적의 값이 음수일 경우 시계방향으로 가는 외적이고, 양수일 경우 반시계방향(Counter Clock Wise)임. 0일 경우 일직선에 놓여있음.&#10;&#10;만약에 두 선분의 끝점으로 만들어낸 ccw 값이 부호가 전부 음수면 교차한다고 판정내리는 알고리즘임.&#10;&#10;복잡함..">
      <created>1675920282106</created>
      <option name="number" value="00257" />
      <option name="presentableId" value="LOCAL-00257" />
      <option name="project" value="LOCAL" />
      <updated>1675920282106</updated>
    </task>
    <task id="LOCAL-00258" summary="백준 17386번 선분 교차 1 기하학 문제&#10;&#10;선분 그룹 소스 약간 변형함 (CCW 알고리즘)">
      <created>1675921065193</created>
      <option name="number" value="00258" />
      <option name="presentableId" value="LOCAL-00258" />
      <option name="project" value="LOCAL" />
      <updated>1675921065193</updated>
    </task>
    <task id="LOCAL-00259" summary="백준 17387번 선분 교차 2 기하학 문제&#10;&#10;선분 교차 1과 완전히 똑같음 (이미 선분 교차 1에서 겹치거나 끝 점일때 교차하는걸로 판정했었기 떄문에)">
      <created>1675921452915</created>
      <option name="number" value="00259" />
      <option name="presentableId" value="LOCAL-00259" />
      <option name="project" value="LOCAL" />
      <updated>1675921452915</updated>
    </task>
    <task id="LOCAL-00260" summary="하는중">
      <created>1675930836650</created>
      <option name="number" value="00260" />
      <option name="presentableId" value="LOCAL-00260" />
      <option name="project" value="LOCAL" />
      <updated>1675930836650</updated>
    </task>
    <task id="LOCAL-00261" summary="백준 20149번 선분 교차 3 기하학(CCW) 문제&#10;&#10;교차점 찾는거는 문제가 없었는데, 문제가 되는 부분이 바로&#10;&#10;두 선분의 끝점이 한 점을 공유하면서 일직선으로 뻗는 경우( 1 1 5 5&#10;                                                5 5 9 9)&#10;                                                &#10;이런 경우 교차점을 찾아내는 함수를 만듦(OnePointCover) 이거만 조심하면 통과.">
      <created>1675987950283</created>
      <option name="number" value="00261" />
      <option name="presentableId" value="LOCAL-00261" />
      <option name="project" value="LOCAL" />
      <updated>1675987950283</updated>
    </task>
    <task id="LOCAL-00262" summary="백준 2166번 다각형의 면적 기하학 문제(신발끈)&#10;&#10;다각형이 어떤 다각형인지 말한 적 없음 -&gt; 오목한 다각형일 수 있음(삼각형으로 분할 못시키는 다각형). 이건 너무한거 아니냐고.">
      <created>1676012479267</created>
      <option name="number" value="00262" />
      <option name="presentableId" value="LOCAL-00262" />
      <option name="project" value="LOCAL" />
      <updated>1676012479267</updated>
    </task>
    <task id="LOCAL-00263" summary="하는중">
      <created>1676017046680</created>
      <option name="number" value="00263" />
      <option name="presentableId" value="LOCAL-00263" />
      <option name="project" value="LOCAL" />
      <updated>1676017046681</updated>
    </task>
    <task id="LOCAL-00264" summary="백준 2239번 스도쿠 백트래킹 문제&#10;&#10;음 그냥 해시써서 체크함. 메모리는 많이 먹어도 시간은 좀 절약이 될듯..?">
      <created>1676270741499</created>
      <option name="number" value="00264" />
      <option name="presentableId" value="LOCAL-00264" />
      <option name="project" value="LOCAL" />
      <updated>1676270741499</updated>
    </task>
    <task id="LOCAL-00265" summary="백준 2252번 줄 세우기 위상정렬 문제&#10;&#10;기본적인 위상정렬, 우선순위 큐 써서 풀어서 사전순 최소 순서로 나옴.">
      <created>1676273573234</created>
      <option name="number" value="00265" />
      <option name="presentableId" value="LOCAL-00265" />
      <option name="project" value="LOCAL" />
      <updated>1676273573234</updated>
    </task>
    <task id="LOCAL-00266" summary="백준 2467번 용액 투 포인터 문제&#10;&#10;투 포인터로 계속 비교해가면서 절대값이 가장 작은 두 용액을 찾아냄.">
      <created>1676353043103</created>
      <option name="number" value="00266" />
      <option name="presentableId" value="LOCAL-00266" />
      <option name="project" value="LOCAL" />
      <updated>1676353043103</updated>
    </task>
    <task id="LOCAL-00267" summary="백준 2473번 용액 투 포인터 문제&#10;&#10;처음에 했던건 투 포인터로 두 수를 결정하고, 두 수 사이에 있는 값들 중에 절댓값을 최소로 만드는 값을 이분 탐색으로 찾겠다고 알고리즘을 짰는데 대차게 실패함.&#10;&#10;그래서 무식하게 반복문으로 0번부터 n - 2번까지 한개 골라놓고, 나머지 두개를 투포인터로 찾아내는 방식으로 바꿨음. 또한 입력 값이 워낙 커서 long 자료형을 써야함.">
      <created>1676436030067</created>
      <option name="number" value="00267" />
      <option name="presentableId" value="LOCAL-00267" />
      <option name="project" value="LOCAL" />
      <updated>1676436030067</updated>
    </task>
    <task id="LOCAL-00268" summary="하는중">
      <created>1676448907549</created>
      <option name="number" value="00268" />
      <option name="presentableId" value="LOCAL-00268" />
      <option name="project" value="LOCAL" />
      <updated>1676448907549</updated>
    </task>
    <task id="LOCAL-00269" summary="백준 2623번 음악프로그램 위상정렬 문제&#10;&#10;단순한 위상정렬인데 출력 조건이 있으므로 잘 보고 하면 됨.">
      <created>1676507355342</created>
      <option name="number" value="00269" />
      <option name="presentableId" value="LOCAL-00269" />
      <option name="project" value="LOCAL" />
      <updated>1676507355342</updated>
    </task>
    <task id="LOCAL-00270" summary="하는중">
      <created>1676621189442</created>
      <option name="number" value="00270" />
      <option name="presentableId" value="LOCAL-00270" />
      <option name="project" value="LOCAL" />
      <updated>1676621189442</updated>
    </task>
    <task id="LOCAL-00271" summary="백준 7579번 앱 냅색(dp) 문제&#10;&#10;냅색처럼 풀면 되는데, 문제 조건이 좀 달라서 헷갈릴 수 있음. 기본적으로 가치가 제일 높은걸 찾으면 됨. 배낭 크기 조건이 딱히 없어서 담을 수 있는 걸 모두 담다가 메모리가 요구 조건을 만족시키면 그때의 코스트를 출력해주면 됨. 이렇게 하기 위해서 이중 for문에서 코스트를 첫 반복인자로 삼아야 됨.">
      <created>1676853757055</created>
      <option name="number" value="00271" />
      <option name="presentableId" value="LOCAL-00271" />
      <option name="project" value="LOCAL" />
      <updated>1676853757055</updated>
    </task>
    <task id="LOCAL-00272" summary="백준 9252번 LCS 2 DP문제&#10;&#10;와 이거 생각보다 어려웠네. 스트링빌더 배열 만드니까 바로 시간초과떠서 실패. 배열 초기화 안하고 i, j = 0일때만 초기화하고 돌리니까 제대로 정답이 안나옴.&#10;&#10;결국 역추적해야겠다 싶어서 새로 클래스 만들어서 최근 char 값과 다음 char가 들어있는 인덱스를 저장하게 만듦.">
      <created>1676874906036</created>
      <option name="number" value="00272" />
      <option name="presentableId" value="LOCAL-00272" />
      <option name="project" value="LOCAL" />
      <updated>1676874906036</updated>
    </task>
    <task id="LOCAL-00273" summary="백준 1992번 쿼드트리 분할 정복 문제&#10;&#10;입력에 n = 1 인 경우의 출력을 고쳤음.">
      <created>1676876751283</created>
      <option name="number" value="00273" />
      <option name="presentableId" value="LOCAL-00273" />
      <option name="project" value="LOCAL" />
      <updated>1676876751283</updated>
    </task>
    <task id="LOCAL-00274" summary="하는중">
      <created>1676880480254</created>
      <option name="number" value="00274" />
      <option name="presentableId" value="LOCAL-00274" />
      <option name="project" value="LOCAL" />
      <updated>1676880480254</updated>
    </task>
    <task id="LOCAL-00275" summary="백준 9328번 열쇠 bfs문제&#10;&#10;그냥 bfs를 하면 되기는하는데, 문을 발견했을때 지금 열쇠가 없더라도 나중에 열쇠를 얻을 수 있으니 따로 저장해 놔야함. 문제는 같은 대문자로 된 문이 여러개 나올 수 있으니 Hashmap&lt;String, Steal_Index&gt; 으론 하나밖에 저장 못하므로 &#10;밸류를 큐로 바꿔서 대문자로 된 모든 문을 다 검사할 수 있게 하면 됨.">
      <created>1676952008323</created>
      <option name="number" value="00275" />
      <option name="presentableId" value="LOCAL-00275" />
      <option name="project" value="LOCAL" />
      <updated>1676952008323</updated>
    </task>
    <task id="LOCAL-00276" summary="하는중">
      <created>1676966892027</created>
      <option name="number" value="00276" />
      <option name="presentableId" value="LOCAL-00276" />
      <option name="project" value="LOCAL" />
      <updated>1676966892027</updated>
    </task>
    <task id="LOCAL-00277" summary="백준 9466번 텀 프로젝트 DFS 문제&#10;&#10;사이클을 찾을 수 있으면 =&gt; 걔네들 끼리 팀을 짜고 사이클에 못들어간 친구는 다 팀이 아니게 된다.">
      <created>1677027735993</created>
      <option name="number" value="00277" />
      <option name="presentableId" value="LOCAL-00277" />
      <option name="project" value="LOCAL" />
      <updated>1677027735993</updated>
    </task>
    <task id="LOCAL-00278" summary="백준 10942번 팰린드롬? dp문제&#10;&#10;무지성 풀이 실패! 5분컷 ㄲㅂ; 메모 써서 팰린드롬 검사 해놓은거 두번 안하게 바꿔주면 됨. 검사한 적 없을 때 = 0 이므로 검사돌리면 됨.">
      <created>1677029487158</created>
      <option name="number" value="00278" />
      <option name="presentableId" value="LOCAL-00278" />
      <option name="project" value="LOCAL" />
      <updated>1677029487158</updated>
    </task>
    <task id="LOCAL-00279" summary="백준 12100번 2048(Easy) 구현, 백트래킹 문제&#10;&#10;아니 이거 왤케 복잡함. 구현 문제이니만큼 좀 무식하게 직접 구현해서 통과하는게 정공법인거 같음. 배열 얕은 복사랑 깊은 복사 유의해서 잘하고.&#10;한 번 합쳐진 블럭은 다음 이동 전까지는 다시 합쳐지지 않음.&#10;&#10;왼쪽으로 이동 후 뒤집기는 오른쪽으로 이동한게 아님!!!! 중요한 포인트&#10;&#10;배열 전체를 원점 대칭으로 회전시키고 왼쪽으로 이동한 배열을 다시 회전시킴 -&gt; 오른쪽 이동임 -&gt; 굉장히 복잡함!!&#10;코드 개선할 부분이 좀 많음. 엄청 더러움. 지금은 퇴근해야되므로 추후에 하는걸로,.">
      <created>1677140207325</created>
      <option name="number" value="00279" />
      <option name="presentableId" value="LOCAL-00279" />
      <option name="project" value="LOCAL" />
      <updated>1677140207327</updated>
    </task>
    <task id="LOCAL-00280" summary="백준 12852번 1로 만들기 2 bfs 문제&#10;&#10;bfs 감 떨어져서 재귀로 만들었다가 뭔가 이상한걸 깨달았음. 그냥 쉬운 bfs.">
      <created>1677205190474</created>
      <option name="number" value="00280" />
      <option name="presentableId" value="LOCAL-00280" />
      <option name="project" value="LOCAL" />
      <updated>1677205190474</updated>
    </task>
    <task id="LOCAL-00281" summary="하는중">
      <created>1677226687869</created>
      <option name="number" value="00281" />
      <option name="presentableId" value="LOCAL-00281" />
      <option name="project" value="LOCAL" />
      <updated>1677226687869</updated>
    </task>
    <task id="LOCAL-00282" summary="백준 13460번 구슬 탈출 2 구현(bfs 문제)&#10;&#10;아 왤케 섹시하게 코드를 못짜겠지. 너무 더러운 코드갔워요~~~">
      <created>1677471417017</created>
      <option name="number" value="00282" />
      <option name="presentableId" value="LOCAL-00282" />
      <option name="project" value="LOCAL" />
      <updated>1677471417017</updated>
    </task>
    <task id="LOCAL-00283" summary="백준 13460번 구슬 탈출 2 구현(bfs 문제)&#10;&#10;아 왤케 섹시하게 코드를 못짜겠지. 너무 더러운 코드갔워요~~~">
      <created>1677479221643</created>
      <option name="number" value="00283" />
      <option name="presentableId" value="LOCAL-00283" />
      <option name="project" value="LOCAL" />
      <updated>1677479221643</updated>
    </task>
    <task id="LOCAL-00284" summary="백준 13459번 구슬 탈출 구현(bfs) 문제&#10;&#10;저번 구슬 탈출 2를 엄청 개선했음!!!!&#10;&#10;x y좌표로 1씩 움직이는 방법을 배웠다!">
      <created>1677479272685</created>
      <option name="number" value="00284" />
      <option name="presentableId" value="LOCAL-00284" />
      <option name="project" value="LOCAL" />
      <updated>1677479272685</updated>
    </task>
    <task id="LOCAL-00285" summary="백준 15653번 구슬 탈출 4 구현(bfs)문제&#10;&#10;아니 구슬 1 에서 개선한 코드가 있었는데, 중복 방문 체크를 Red, Blue로 해놔가지고 무한 루프를 도는 경우가 발생함. 그걸 temp로 고쳐서 해결">
      <created>1677548843933</created>
      <option name="number" value="00285" />
      <option name="presentableId" value="LOCAL-00285" />
      <option name="project" value="LOCAL" />
      <updated>1677548843933</updated>
    </task>
    <task id="LOCAL-00286" summary="백준 15644번 구슬 탈출 3 구현 문제&#10;&#10;구슬 탈출 4 에서 중복 배열 체크 개선한 코드에 역추적으로 기울인 방향을 구할 수 있게 만든 코드">
      <created>1677548905583</created>
      <option name="number" value="00286" />
      <option name="presentableId" value="LOCAL-00286" />
      <option name="project" value="LOCAL" />
      <updated>1677548905583</updated>
    </task>
    <task id="LOCAL-00287" summary="하는중">
      <created>1677572030595</created>
      <option name="number" value="00287" />
      <option name="presentableId" value="LOCAL-00287" />
      <option name="project" value="LOCAL" />
      <updated>1677572030595</updated>
    </task>
    <task id="LOCAL-00288" summary="백준 14003번 가장 긴 증가하는 부분 수열 5 LIS문제(nlogn)&#10;&#10;이미 LIS를 바이너리로 해놓은 코드(LIS2)가 있어서 거기다 역추적을 어떻게 잘 끼워넣은 코드임.">
      <created>1677740572594</created>
      <option name="number" value="00288" />
      <option name="presentableId" value="LOCAL-00288" />
      <option name="project" value="LOCAL" />
      <updated>1677740572594</updated>
    </task>
    <task id="LOCAL-00289" summary="백준 12738번 가장 긴 증가하는 부분 수열 3 LIS&#10;&#10;마 바이너리로 후딱 해치워라!">
      <created>1677740791741</created>
      <option name="number" value="00289" />
      <option name="presentableId" value="LOCAL-00289" />
      <option name="project" value="LOCAL" />
      <updated>1677740791741</updated>
    </task>
    <task id="LOCAL-00290" summary="백준 14002번 가장 긴 증가하는 부분 수열 4 LIS&#10;&#10;LIS5랑 완전히 동일하게 풀면 되지만 입력 값이 널널해서 NlogN 까지 필요없는 문제.">
      <created>1677740864599</created>
      <option name="number" value="00290" />
      <option name="presentableId" value="LOCAL-00290" />
      <option name="project" value="LOCAL" />
      <updated>1677740864599</updated>
    </task>
    <task id="LOCAL-00291" summary="하는중">
      <created>1677745165807</created>
      <option name="number" value="00291" />
      <option name="presentableId" value="LOCAL-00291" />
      <option name="project" value="LOCAL" />
      <updated>1677745165807</updated>
    </task>
    <option name="localTasksCounter" value="292" />
    <servers />
  </component>
  <component name="Vcs.Log.History.Properties">
    <option name="COLUMN_ID_ORDER">
      <list>
        <option value="Default.Root" />
        <option value="Default.Author" />
        <option value="Default.Date" />
        <option value="Default.Subject" />
        <option value="Space.CommitStatus" />
      </list>
    </option>
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="main" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="CHECK_NEW_TODO" value="false" />
    <MESSAGE value="백준 17386번 선분 교차 1 기하학 문제&#10;&#10;선분 그룹 소스 약간 변형함 (CCW 알고리즘)" />
    <MESSAGE value="백준 17387번 선분 교차 2 기하학 문제&#10;&#10;선분 교차 1과 완전히 똑같음 (이미 선분 교차 1에서 겹치거나 끝 점일때 교차하는걸로 판정했었기 떄문에)" />
    <MESSAGE value="백준 20149번 선분 교차 3 기하학(CCW) 문제&#10;&#10;교차점 찾는거는 문제가 없었는데, 문제가 되는 부분이 바로&#10;&#10;두 선분의 끝점이 한 점을 공유하면서 일직선으로 뻗는 경우( 1 1 5 5&#10;                                                5 5 9 9)&#10;                                                &#10;이런 경우 교차점을 찾아내는 함수를 만듦(OnePointCover) 이거만 조심하면 통과." />
    <MESSAGE value="백준 2166번 다각형의 면적 기하학 문제(신발끈)&#10;&#10;다각형이 어떤 다각형인지 말한 적 없음 -&gt; 오목한 다각형일 수 있음(삼각형으로 분할 못시키는 다각형). 이건 너무한거 아니냐고." />
    <MESSAGE value="백준 2239번 스도쿠 백트래킹 문제&#10;&#10;음 그냥 해시써서 체크함. 메모리는 많이 먹어도 시간은 좀 절약이 될듯..?" />
    <MESSAGE value="백준 2252번 줄 세우기 위상정렬 문제&#10;&#10;기본적인 위상정렬, 우선순위 큐 써서 풀어서 사전순 최소 순서로 나옴." />
    <MESSAGE value="백준 2467번 용액 투 포인터 문제&#10;&#10;투 포인터로 계속 비교해가면서 절대값이 가장 작은 두 용액을 찾아냄." />
    <MESSAGE value="백준 2473번 용액 투 포인터 문제&#10;&#10;처음에 했던건 투 포인터로 두 수를 결정하고, 두 수 사이에 있는 값들 중에 절댓값을 최소로 만드는 값을 이분 탐색으로 찾겠다고 알고리즘을 짰는데 대차게 실패함.&#10;&#10;그래서 무식하게 반복문으로 0번부터 n - 2번까지 한개 골라놓고, 나머지 두개를 투포인터로 찾아내는 방식으로 바꿨음. 또한 입력 값이 워낙 커서 long 자료형을 써야함." />
    <MESSAGE value="백준 2623번 음악프로그램 위상정렬 문제&#10;&#10;단순한 위상정렬인데 출력 조건이 있으므로 잘 보고 하면 됨." />
    <MESSAGE value="백준 7579번 앱 냅색(dp) 문제&#10;&#10;냅색처럼 풀면 되는데, 문제 조건이 좀 달라서 헷갈릴 수 있음. 기본적으로 가치가 제일 높은걸 찾으면 됨. 배낭 크기 조건이 딱히 없어서 담을 수 있는 걸 모두 담다가 메모리가 요구 조건을 만족시키면 그때의 코스트를 출력해주면 됨. 이렇게 하기 위해서 이중 for문에서 코스트를 첫 반복인자로 삼아야 됨." />
    <MESSAGE value="백준 9252번 LCS 2 DP문제&#10;&#10;와 이거 생각보다 어려웠네. 스트링빌더 배열 만드니까 바로 시간초과떠서 실패. 배열 초기화 안하고 i, j = 0일때만 초기화하고 돌리니까 제대로 정답이 안나옴.&#10;&#10;결국 역추적해야겠다 싶어서 새로 클래스 만들어서 최근 char 값과 다음 char가 들어있는 인덱스를 저장하게 만듦." />
    <MESSAGE value="백준 1992번 쿼드트리 분할 정복 문제&#10;&#10;입력에 n = 1 인 경우의 출력을 고쳤음." />
    <MESSAGE value="백준 9328번 열쇠 bfs문제&#10;&#10;그냥 bfs를 하면 되기는하는데, 문을 발견했을때 지금 열쇠가 없더라도 나중에 열쇠를 얻을 수 있으니 따로 저장해 놔야함. 문제는 같은 대문자로 된 문이 여러개 나올 수 있으니 Hashmap&lt;String, Steal_Index&gt; 으론 하나밖에 저장 못하므로 &#10;밸류를 큐로 바꿔서 대문자로 된 모든 문을 다 검사할 수 있게 하면 됨." />
    <MESSAGE value="백준 9466번 텀 프로젝트 DFS 문제&#10;&#10;사이클을 찾을 수 있으면 =&gt; 걔네들 끼리 팀을 짜고 사이클에 못들어간 친구는 다 팀이 아니게 된다." />
    <MESSAGE value="백준 10942번 팰린드롬? dp문제&#10;&#10;무지성 풀이 실패! 5분컷 ㄲㅂ; 메모 써서 팰린드롬 검사 해놓은거 두번 안하게 바꿔주면 됨. 검사한 적 없을 때 = 0 이므로 검사돌리면 됨." />
    <MESSAGE value="백준 12100번 2048(Easy) 구현, 백트래킹 문제&#10;&#10;아니 이거 왤케 복잡함. 구현 문제이니만큼 좀 무식하게 직접 구현해서 통과하는게 정공법인거 같음. 배열 얕은 복사랑 깊은 복사 유의해서 잘하고.&#10;한 번 합쳐진 블럭은 다음 이동 전까지는 다시 합쳐지지 않음.&#10;&#10;왼쪽으로 이동 후 뒤집기는 오른쪽으로 이동한게 아님!!!! 중요한 포인트&#10;&#10;배열 전체를 원점 대칭으로 회전시키고 왼쪽으로 이동한 배열을 다시 회전시킴 -&gt; 오른쪽 이동임 -&gt; 굉장히 복잡함!!&#10;코드 개선할 부분이 좀 많음. 엄청 더러움. 지금은 퇴근해야되므로 추후에 하는걸로,." />
    <MESSAGE value="백준 12852번 1로 만들기 2 bfs 문제&#10;&#10;bfs 감 떨어져서 재귀로 만들었다가 뭔가 이상한걸 깨달았음. 그냥 쉬운 bfs." />
    <MESSAGE value="백준 13460번 구슬 탈출 2 구현(bfs 문제)&#10;&#10;아 왤케 섹시하게 코드를 못짜겠지. 너무 더러운 코드갔워요~~~" />
    <MESSAGE value="백준 13459번 구슬 탈출 구현(bfs) 문제&#10;&#10;저번 구슬 탈출 2를 엄청 개선했음!!!!&#10;&#10;x y좌표로 1씩 움직이는 방법을 배웠다!" />
    <MESSAGE value="백준 15653번 구슬 탈출 4 구현(bfs)문제&#10;&#10;아니 구슬 1 에서 개선한 코드가 있었는데, 중복 방문 체크를 Red, Blue로 해놔가지고 무한 루프를 도는 경우가 발생함. 그걸 temp로 고쳐서 해결" />
    <MESSAGE value="백준 15644번 구슬 탈출 3 구현 문제&#10;&#10;구슬 탈출 4 에서 중복 배열 체크 개선한 코드에 역추적으로 기울인 방향을 구할 수 있게 만든 코드" />
    <MESSAGE value="백준 14003번 가장 긴 증가하는 부분 수열 5 LIS문제(nlogn)&#10;&#10;이미 LIS를 바이너리로 해놓은 코드(LIS2)가 있어서 거기다 역추적을 어떻게 잘 끼워넣은 코드임." />
    <MESSAGE value="백준 12738번 가장 긴 증가하는 부분 수열 3 LIS&#10;&#10;마 바이너리로 후딱 해치워라!" />
    <MESSAGE value="백준 14002번 가장 긴 증가하는 부분 수열 4 LIS&#10;&#10;LIS5랑 완전히 동일하게 풀면 되지만 입력 값이 널널해서 NlogN 까지 필요없는 문제." />
    <MESSAGE value="하는중" />
    <option name="LAST_COMMIT_MESSAGE" value="하는중" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <breakpoint enabled="true" type="java-exception">
          <properties class="java.lang.ArrayIndexOutOfBoundsException" package="java.lang" />
          <option name="timeStamp" value="1" />
        </breakpoint>
        <breakpoint enabled="true" type="java-exception">
          <properties class="java.util.InputMismatchException" package="java.util" />
          <option name="timeStamp" value="2" />
        </breakpoint>
        <breakpoint enabled="true" type="java-exception">
          <properties class="java.lang.ArithmeticException" package="java.lang" />
          <option name="timeStamp" value="3" />
        </breakpoint>
        <breakpoint enabled="true" type="java-exception">
          <properties class="java.lang.IndexOutOfBoundsException" package="java.lang" />
          <option name="timeStamp" value="34" />
        </breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/DP/BitonicLis.java</url>
          <line>28</line>
          <option name="timeStamp" value="40" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/DP/BitonicLis.java</url>
          <line>22</line>
          <option name="timeStamp" value="41" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/DP/LIS.java</url>
          <line>22</line>
          <option name="timeStamp" value="103" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/DP/Tileing2.java</url>
          <line>13</line>
          <option name="timeStamp" value="135" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/DFSandBFS/MinimumCost.java</url>
          <line>57</line>
          <option name="timeStamp" value="183" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/BinarySearch/LIS2.java</url>
          <line>21</line>
          <option name="timeStamp" value="295" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/Main.java</url>
          <line>16</line>
          <option name="timeStamp" value="298" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-method">
          <url>file://$PROJECT_DIR$/src/GraphTheory/Cheese.java</url>
          <line>24</line>
          <properties class="GraphTheory.Cheese">
            <option name="EMULATED" value="true" />
            <option name="WATCH_EXIT" value="false" />
          </properties>
          <option name="timeStamp" value="177" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
    <watches-manager>
      <configuration name="Application">
        <watch expression="vlist" language="JAVA" />
        <watch expression="Jlist" />
        <watch expression="((java.util.LinkedList)next).get(2)" custom="java.util.LinkedList" />
        <watch expression="((java.util.LinkedList)next).get(2)" custom="java.util.LinkedList" />
        <watch expression="select" />
        <watch expression="sum" />
        <watch expression="b" />
        <watch expression="recent[i - 1]" language="JAVA" />
        <watch expression="st" />
      </configuration>
    </watches-manager>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/Practicing_Java_and_Git$Main.ic" NAME="Main 커버리지 결과" MODIFIED="1675927655943" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/untitled$Main.ic" NAME="Main 커버리지 결과" MODIFIED="1653019956093" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>