<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AnalysisUIOptions">
    <option name="SCOPE_TYPE" value="3" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="b0496aaa-cdd3-48da-9997-1a22298cde73" name="Default Changelist" comment="하는중">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/out/production/Practicing-Java-and-Git/Main.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/Practicing-Java-and-Git/Main.class" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Main.java" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="PUSH_AUTO_UPDATE" value="true" />
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2135rX1w0HuR7RH1xN46edl6lh5" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
    <option name="showVisibilityIcons" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="ASKED_SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="last.edited.regexp" value="[1,3,4,5]" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/src/Queue/Card2.java" />
    <property name="project.structure.last.edited" value="모듈" />
    <property name="project.structure.proportion" value="0.0" />
    <property name="project.structure.side.proportion" value="0.0" />
    <property name="run.code.analysis.last.selected.profile" value="pProject Default" />
    <property name="settings.editor.selected.configurable" value="preferences.keymap" />
    <property name="two.files.diff.last.used.file" value="$PROJECT_DIR$/src/Queue/Card2.java" />
  </component>
  <component name="RunManager" selected="애플리케이션.Main">
    <configuration name="Cheese" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="GraphTheory.Cheese" />
      <module name="Practicing-Java-and-Git" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="GraphTheory.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Dijkstra" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="DFSandBFS.Dijkstra" />
      <module name="Practicing-Java-and-Git" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="DFSandBFS.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="HideAndSeek3" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="GraphTheory.HideAndSeek3" />
      <module name="Practicing-Java-and-Git" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="GraphTheory.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="Main" />
      <module name="Practicing-Java-and-Git" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="MinimumCost" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="DFSandBFS.MinimumCost" />
      <module name="Practicing-Java-and-Git" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="DFSandBFS.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="애플리케이션.Dijkstra" />
      <item itemvalue="애플리케이션.Cheese" />
      <item itemvalue="애플리케이션.Main" />
      <item itemvalue="애플리케이션.MinimumCost" />
      <item itemvalue="애플리케이션.HideAndSeek3" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="애플리케이션.Main" />
        <item itemvalue="애플리케이션.HideAndSeek3" />
        <item itemvalue="애플리케이션.MinimumCost" />
        <item itemvalue="애플리케이션.Cheese" />
        <item itemvalue="애플리케이션.Main" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="b0496aaa-cdd3-48da-9997-1a22298cde73" name="Default Changelist" comment="" />
      <created>1637157129708</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1637157129708</updated>
    </task>
    <task id="LOCAL-00180" summary="하는중">
      <created>1669018196950</created>
      <option name="number" value="00180" />
      <option name="presentableId" value="LOCAL-00180" />
      <option name="project" value="LOCAL" />
      <updated>1669018196951</updated>
    </task>
    <task id="LOCAL-00181" summary="하는중">
      <created>1669104958752</created>
      <option name="number" value="00181" />
      <option name="presentableId" value="LOCAL-00181" />
      <option name="project" value="LOCAL" />
      <updated>1669104958752</updated>
    </task>
    <task id="LOCAL-00182" summary="백준 2206번 벽 부수고 이동하기 bfs문제&#10;&#10;처음에는 단순한 bfs로 했는데 실패. 문제가 벽을 뚫을 수 있으면 다 뚫어봐야됨. 그래서 뭔 생각을 했냐면 for문 돌려서 벽이 나올때마다 벽에서 bfs를 돌리자 =&gt;개같이 실패. 그 다음은 스타트 지점에서 bfs를 돌리면서 가다가, 벽이 나오면 벽에서 bfs를 해서 목적지에 도달할 수 있는지 재귀로 판단하자 -&gt; 개같이 시간초과. 생각만 한거는 방문을 벽을 뚫음 = 1, 안뚫음 = 0 으로 해서 bfs가 두개 돌아가게 만들자고 생각했는데 방법을 고민하다가 너무 복잡한거 같아서 포기함. &#10;결론적으로 마지막이 정답. 그런데 구현방법을 새로운 클래스를 정의한다든지가 아니라, 삼차원 배열을 써서 z값을 벽을 부쉈나 안부쉈나로 판단했음. 간단히 해결됨.">
      <created>1669168877441</created>
      <option name="number" value="00182" />
      <option name="presentableId" value="LOCAL-00182" />
      <option name="project" value="LOCAL" />
      <updated>1669168877441</updated>
    </task>
    <task id="LOCAL-00183" summary="백준 2407번 조합 정수론&#10;&#10;100c50이 너무 크긴 함. 문자열으로 계산하면 됨. 개같이 빅---인트">
      <created>1669176689499</created>
      <option name="number" value="00183" />
      <option name="presentableId" value="LOCAL-00183" />
      <option name="project" value="LOCAL" />
      <updated>1669176689499</updated>
    </task>
    <task id="LOCAL-00184" summary="하는중">
      <created>1669190881998</created>
      <option name="number" value="00184" />
      <option name="presentableId" value="LOCAL-00184" />
      <option name="project" value="LOCAL" />
      <updated>1669190881998</updated>
    </task>
    <task id="LOCAL-00185" summary="백준 9465번 스티커 dp문제&#10;&#10;스티커를 뽑을 때, j - 1위치에서 사선에 위치한 j 스티커를 뽑을 수도있고,&#10;&#10;j -2 위치에서 어느 위치든 j 스티커를 뽑을 수 있다(위 아래 둘 다 선택 가능)&#10;&#10;따라서 dp[i][j] = max(dp[i - 1][j-1] , dp[i - 1][j - 2], dp[i][j - 2] + sticker[i][j]점화식이 나오게된다.">
      <created>1669255232406</created>
      <option name="number" value="00185" />
      <option name="presentableId" value="LOCAL-00185" />
      <option name="project" value="LOCAL" />
      <updated>1669255232406</updated>
    </task>
    <task id="LOCAL-00186" summary="백준 11404번 플로이드 플로이드 워셜 문제&#10;&#10;플로이드 워셜 연습용 문제임. 그런데 약간 비틀어서 추정 예상되는 가장 큰 비용값으로 경로 배열을 초기화하지 않고 0으로 초기화 해놓고 플로이드 워셜을 썼음. 이것도 가능은 하네 ㅇㅅㅇ;;">
      <created>1669264742735</created>
      <option name="number" value="00186" />
      <option name="presentableId" value="LOCAL-00186" />
      <option name="project" value="LOCAL" />
      <updated>1669264742735</updated>
    </task>
    <task id="LOCAL-00187" summary="하는중">
      <created>1669277949385</created>
      <option name="number" value="00187" />
      <option name="presentableId" value="LOCAL-00187" />
      <option name="project" value="LOCAL" />
      <updated>1669277949385</updated>
    </task>
    <task id="LOCAL-00188" summary="백준 11725번 트리의 부모 찾기 트리 문제&#10;&#10;해시로 할까 생각하다가 그냥 관둠. 스탠다드한 bfs로 풀었음.">
      <created>1669346991573</created>
      <option name="number" value="00188" />
      <option name="presentableId" value="LOCAL-00188" />
      <option name="project" value="LOCAL" />
      <updated>1669346991574</updated>
    </task>
    <task id="LOCAL-00189" summary="하는중">
      <created>1669363777581</created>
      <option name="number" value="00189" />
      <option name="presentableId" value="LOCAL-00189" />
      <option name="project" value="LOCAL" />
      <updated>1669363777582</updated>
    </task>
    <task id="LOCAL-00190" summary="백준 13549번 숨바꼭질 3 bfs문제&#10;&#10;단순한 bfs로 풀 수 있는데 우선순위 큐를 잘 쓸것. 일단 시간 순으로 나열하되, 같은 시간일 경우 위치의 크기 순으로 나열이 되어있어야 가장 빠르게 k값에 도달할 수 있다.">
      <created>1669608030961</created>
      <option name="number" value="00190" />
      <option name="presentableId" value="LOCAL-00190" />
      <option name="project" value="LOCAL" />
      <updated>1669608030961</updated>
    </task>
    <task id="LOCAL-00191" summary="백준 15654번 n과 m 5 dfs문제&#10;&#10;dfs로 풀면 됨.">
      <created>1669613672937</created>
      <option name="number" value="00191" />
      <option name="presentableId" value="LOCAL-00191" />
      <option name="project" value="LOCAL" />
      <updated>1669613672937</updated>
    </task>
    <task id="LOCAL-00192" summary="하는중">
      <created>1669623315936</created>
      <option name="number" value="00192" />
      <option name="presentableId" value="LOCAL-00192" />
      <option name="project" value="LOCAL" />
      <updated>1669623315936</updated>
    </task>
    <task id="LOCAL-00193" summary="백준 1916번 최소비용구하기 다익스트라 문제&#10;&#10;작성자님께서 ﻿﻿﻿﻿33,34번 줄에서 저장된 값이 0일 경우 입력 받은 수를 그대로 넣어주는 방식으로 코드를 짜셨는데, 이 문제에서는 버스의 비용이 0인 경우가 존재합니다. 따라서 배열에 값이 들어온 적이 없는것인지, 혹은 배열에 값이 들어왔는데 0인지를 판단할 수 없습니다. 여기서 문제가 발생한 것 같습니다.&#10;예를 들자면&#10;&#10;1 4 3&#10;&#10;1 4 0&#10;&#10;1 4 1&#10;&#10;같은 입력이 들어올 경우 원래라면 최소 비용인 0이 배열에 저장되어야하지만, 현재 코드 상으로 0이 저장된 이후에 배열에 바로 다음 값인 1이 저장되게 되므로 최소 비용을 저장하지 못합니다. 이 부분을 고치신다면 통과할 수 있으실것 같습니다.&#10;단순한 다익스트라였는데 비용을 입력받을 때 삐꾸나서 틀림.">
      <created>1669706466168</created>
      <option name="number" value="00193" />
      <option name="presentableId" value="LOCAL-00193" />
      <option name="project" value="LOCAL" />
      <updated>1669706466168</updated>
    </task>
    <task id="LOCAL-00194" summary="하는중">
      <created>1669709897836</created>
      <option name="number" value="00194" />
      <option name="presentableId" value="LOCAL-00194" />
      <option name="project" value="LOCAL" />
      <updated>1669709897837</updated>
    </task>
    <task id="LOCAL-00195" summary="백준 2096 내려가기 dp문제&#10;&#10;아니 슬라이딩 윈도우 쓸 문제가 아닌데 어케함;;; 그냥 dp로 풀었음. 3차원 배열로 max, min을 결정함.">
      <created>1669872580621</created>
      <option name="number" value="00195" />
      <option name="presentableId" value="LOCAL-00195" />
      <option name="project" value="LOCAL" />
      <updated>1669872580622</updated>
    </task>
    <task id="LOCAL-00196" summary="하는중">
      <created>1669882148942</created>
      <option name="number" value="00196" />
      <option name="presentableId" value="LOCAL-00196" />
      <option name="project" value="LOCAL" />
      <updated>1669882148942</updated>
    </task>
    <task id="LOCAL-00197" summary="백준 2448번 별 찍기 11 재귀 문제&#10;&#10;별 찍기 10번을 참고했음. 위 -&gt; 좌 -&gt; 우 순으로 문자열에 집어넣는 방법을 썼는데 시간초과가 나서 원래 별을 가지고 추가로 복사하는 방법을 썼음. 그리고 문자열에 문자열을 더하는거 보다 StringBuilder가 더 시간이 덜 걸리는듯.">
      <created>1669950564387</created>
      <option name="number" value="00197" />
      <option name="presentableId" value="LOCAL-00197" />
      <option name="project" value="LOCAL" />
      <updated>1669950564387</updated>
    </task>
    <task id="LOCAL-00198" summary="백준 2638번 치즈 bfs문제&#10;&#10;외부 공기 =&gt; bfs로 1을 무시하고 0끼리 진행했을때 닿은 곳. 따라서 bfs 시작지점을 가장자리 변으로 해야(치즈가 없는 곳) 항상 외부공기라는 것을 보장할 수 있겠음. 문제가 안생김 &lt;- 여기서 처음 틀렸음.&#10;&#10;그 후에는 제거해야할 치즈들을 골라내고 다른 것은 모두 처음(과 비슷한)상태로 되돌려서 bfs를 반복하는 것이 정답 풀이가 되겠음,.">
      <created>1669969040139</created>
      <option name="number" value="00198" />
      <option name="presentableId" value="LOCAL-00198" />
      <option name="project" value="LOCAL" />
      <updated>1669969040139</updated>
    </task>
    <task id="LOCAL-00199" summary="백준 9935번 문자열 폭발 스택 문제&#10;&#10;일단 문자열을 죄다 스택에 넣음. 스택 꼭다리가 폭발 문자열의 마지막 글자(패턴의 마지막)일때 폭발하는지 검사함. 스택에서 패턴만큼 비교하면서 뽑음. 이때 뽑은 갯수가 맞으면 통과 -&gt; 삭제, 아니면 통과 x -&gt; 다시 스택에 집어넣음을 반복함. 이러면 폭발 후에 합치는 것도 그렇게 걱정할 필요 없음.">
      <created>1670390527125</created>
      <option name="number" value="00199" />
      <option name="presentableId" value="LOCAL-00199" />
      <option name="project" value="LOCAL" />
      <updated>1670390527125</updated>
    </task>
    <task id="LOCAL-00200" summary="하는중">
      <created>1670400082928</created>
      <option name="number" value="00200" />
      <option name="presentableId" value="LOCAL-00200" />
      <option name="project" value="LOCAL" />
      <updated>1670400082928</updated>
    </task>
    <task id="LOCAL-00201" summary="백준 11779 최소비용 구하기 2 다익스트라 문제&#10;&#10;아니 최소비용 구하는거 그대로 하면 되는데, 경로 추적할때 무한 루프를 돌았음.&#10;근데 무한 루프때문에 시간초과보다 메모리 초과가 더 빨리 떠서 계속 간선 메모리만 만지고 있었음. 문제는 루프에서 계속 리스트에 값을 쑤셔넣는거라서 그거 고쳤더니 통과함.">
      <created>1670471917386</created>
      <option name="number" value="00201" />
      <option name="presentableId" value="LOCAL-00201" />
      <option name="project" value="LOCAL" />
      <updated>1670471917386</updated>
    </task>
    <task id="LOCAL-00202" summary="백준 2638번 치즈 bfs문제&#10;&#10;외부 공기 =&gt; bfs로 1을 무시하고 0끼리 진행했을때 닿은 곳. 따라서 bfs 시작지점을 가장자리 변으로 해야(치즈가 없는 곳) 항상 외부공기라는 것을 보장할 수 있겠음. 문제가 안생김 &lt;- 여기서 처음 틀렸음.&#10;&#10;그 후에는 제거해야할 치즈들을 골라내고 다른 것은 모두 처음(과 비슷한)상태로 되돌려서 bfs를 반복하는 것이 정답 풀이가 되겠음,.">
      <created>1670475880701</created>
      <option name="number" value="00202" />
      <option name="presentableId" value="LOCAL-00202" />
      <option name="project" value="LOCAL" />
      <updated>1670475880701</updated>
    </task>
    <task id="LOCAL-00203" summary="백준 12851번 숨바꼭질 2 bfs문제&#10;&#10;숨바꼭질 3 코드에서 시간재는 코드 + 방문 체크를 while문 시작지점에 만들었음.(같은 시간내에 동일한 지점에 오는건 상관 없음, 더 늦게 오면 어차피 최단 거리가 아님)">
      <created>1670826173620</created>
      <option name="number" value="00203" />
      <option name="presentableId" value="LOCAL-00203" />
      <option name="project" value="LOCAL" />
      <updated>1670826173620</updated>
    </task>
    <task id="LOCAL-00204" summary="백준 2638번 치즈 bfs문제&#10;&#10;외부 공기 =&gt; bfs로 1을 무시하고 0끼리 진행했을때 닿은 곳. 따라서 bfs 시작지점을 가장자리 변으로 해야(치즈가 없는 곳) 항상 외부공기라는 것을 보장할 수 있겠음. 문제가 안생김 &lt;- 여기서 처음 틀렸음.&#10;&#10;그 후에는 제거해야할 치즈들을 골라내고 다른 것은 모두 처음(과 비슷한)상태로 되돌려서 bfs를 반복하는 것이 정답 풀이가 되겠음,.">
      <created>1670832907714</created>
      <option name="number" value="00204" />
      <option name="presentableId" value="LOCAL-00204" />
      <option name="project" value="LOCAL" />
      <updated>1670832907714</updated>
    </task>
    <task id="LOCAL-00205" summary="하는중">
      <created>1670919358332</created>
      <option name="number" value="00205" />
      <option name="presentableId" value="LOCAL-00205" />
      <option name="project" value="LOCAL" />
      <updated>1670919358332</updated>
    </task>
    <task id="LOCAL-00206" summary="백준 14052번 연구소 bfs 문제&#10;&#10;브루트포스로 풀면 됨 (시간 초과 안남. bfs만 제대로 짜면). 벽을 세워야하는 장소를 큐로 저장해놓고 큐에서 3개 뽑는 방법을 썼음. 바이러스가 있는 곳은 리스트로 저장되어있으므로 그냥 그대로 bfs 큐에 넣어서 돌리면 됨.">
      <created>1670997367407</created>
      <option name="number" value="00206" />
      <option name="presentableId" value="LOCAL-00206" />
      <option name="project" value="LOCAL" />
      <updated>1670997367407</updated>
    </task>
    <task id="LOCAL-00207" summary="백준 13172번 시그마 모듈러 연산 역원 구하기 문제&#10;&#10;모듈러 역원을 구함. 구하는 방법은 확장 유클리드를 재귀를 돌림. 재귀인데 일종의 dp처럼 함수가 호출될때 값이 변경되고, 그 변경 된 값을 그 전 함수에서 바로 이용가능하게끔 atomicLong을 썼음. 왜 틀렸는지는 잘 모르겠음. 아마도 확장 유클리드 함수에서 s가 음수가 됐을 때를 고쳤더니 맞은 것 같음.">
      <created>1670997528090</created>
      <option name="number" value="00207" />
      <option name="presentableId" value="LOCAL-00207" />
      <option name="project" value="LOCAL" />
      <updated>1670997528090</updated>
    </task>
    <task id="LOCAL-00208" summary="하는중">
      <created>1671005527353</created>
      <option name="number" value="00208" />
      <option name="presentableId" value="LOCAL-00208" />
      <option name="project" value="LOCAL" />
      <updated>1671005527353</updated>
    </task>
    <task id="LOCAL-00209" summary="하는중">
      <created>1671092061924</created>
      <option name="number" value="00209" />
      <option name="presentableId" value="LOCAL-00209" />
      <option name="project" value="LOCAL" />
      <updated>1671092061924</updated>
    </task>
    <task id="LOCAL-00210" summary="백준 14938번 서강그라운드 그래프 문제&#10;&#10;언럭키 다익스트라? 우선순위 큐로 거리 별로 탐색하는 알고리즘인데 bfs로 수색하게끔 만들었음. 방문이 중요한게 아니라 실제 지점의 아이템을 더했냐 안했냐가 중요한것임.">
      <created>1671167050133</created>
      <option name="number" value="00210" />
      <option name="presentableId" value="LOCAL-00210" />
      <option name="project" value="LOCAL" />
      <updated>1671167050133</updated>
    </task>
    <task id="LOCAL-00211" summary="백준 15657 N과 M(8) 재귀로 푼 문제&#10;&#10;스트링빌더를 재귀로 넣어서 풀었음. 중복으로 수를 뽑는게 가능하므로 재귀에서 인덱스를 상위 인덱스 그대로 받아오게끔 만들었고, 비내림차 순이므로 입력된 값은 리스트에 넣어 정렬함(우선순위 큐도 생각은 했는데 귀찮았음). 스트링빌더에서 delete나 replace 메소드는 스트링빌더의 인덱스를 기준으로 잡는데, 리스트에 입력된 값이 몇 자리 수일지는 모르기 때문에 사용하기 힘듦.">
      <created>1671420749757</created>
      <option name="number" value="00211" />
      <option name="presentableId" value="LOCAL-00211" />
      <option name="project" value="LOCAL" />
      <updated>1671420749757</updated>
    </task>
    <task id="LOCAL-00212" summary="백준 15663번 N과 M(9) 백트래킹 문제&#10;&#10;그냥 재귀로 풀긴했음. 중복없이 탐색해야되므로 visited 배열을 써서 리스트 내에서 중복 탐색을 막았고, hashset으로 만약 리스트 내에 중복 값이 있어 같은 결과가 출력될 경우 막을 수 있게끔 조치했음.">
      <created>1671438235472</created>
      <option name="number" value="00212" />
      <option name="presentableId" value="LOCAL-00212" />
      <option name="project" value="LOCAL" />
      <updated>1671438235472</updated>
    </task>
    <task id="LOCAL-00213" summary="하는중">
      <created>1671438478934</created>
      <option name="number" value="00213" />
      <option name="presentableId" value="LOCAL-00213" />
      <option name="project" value="LOCAL" />
      <updated>1671438478934</updated>
    </task>
    <task id="LOCAL-00214" summary="백준 15666번 N과 M(12) 재귀로 푼 문제&#10;&#10;N과 M(8)번 소스에서 중복된 수열 출력하지 않게끔 Hashset으로 조정한게 다임.">
      <created>1671495002522</created>
      <option name="number" value="00214" />
      <option name="presentableId" value="LOCAL-00214" />
      <option name="project" value="LOCAL" />
      <updated>1671495002522</updated>
    </task>
    <task id="LOCAL-00215" summary="백준 15686번 치킨 배달 백트래킹 문제&#10;&#10;좌표의 절댓값 차이만큼의 거리가 있고, 각 집에서 치킨 집 까지의 최소 거리의 합산을 구하는 문제. 브루트포스로 모든 경우의 수를 찾아보는 방법을 썼는데, BFS로 할까 고민했는데 재귀로 풀었음. 재귀 과정에서 변수가 변경되는 경우를 잘 고려해야함. &lt;- 실수가 잦음.">
      <created>1671524336566</created>
      <option name="number" value="00215" />
      <option name="presentableId" value="LOCAL-00215" />
      <option name="project" value="LOCAL" />
      <updated>1671524336566</updated>
    </task>
    <task id="LOCAL-00216" summary="백준 16953번 A -&gt; B BFS 문제&#10;&#10;간단한 BFS로 풀 수 있는데, 다음 노드로 넘어갈때 INT 한계치를 넘어가는 경우가 있음. 이걸 LONG으로 고치면 통과">
      <created>1671680848968</created>
      <option name="number" value="00216" />
      <option name="presentableId" value="LOCAL-00216" />
      <option name="project" value="LOCAL" />
      <updated>1671680848968</updated>
    </task>
    <task id="LOCAL-00217" summary="하는중">
      <created>1671696744070</created>
      <option name="number" value="00217" />
      <option name="presentableId" value="LOCAL-00217" />
      <option name="project" value="LOCAL" />
      <updated>1671696744070</updated>
    </task>
    <task id="LOCAL-00218" summary="백준 17070번 파이프 옮기기 1 그래프 문제&#10;&#10;파이프를 움직이는건 움직이는건데, 파이프가 어떤 자세를 취하냐에 따라 다르게 움직일 수 있다. 따라서 파이프 자세를 가세대 세 가지로 저장해놓고 그에 맞게끔 움직일 수 있게 하면 시간초과가 난다. 따라서 (n, n)이 이미 막혀서 도달못하는 경우, x나 y 좌표가 이미 벽에 닿아있어서 특정 자세 말고는 못 움직이는 경우를 따로 떼 주니까 통과함.">
      <created>1671771670521</created>
      <option name="number" value="00218" />
      <option name="presentableId" value="LOCAL-00218" />
      <option name="project" value="LOCAL" />
      <updated>1671771670521</updated>
    </task>
    <task id="LOCAL-00219" summary="하는중">
      <created>1671783408745</created>
      <option name="number" value="00219" />
      <option name="presentableId" value="LOCAL-00219" />
      <option name="project" value="LOCAL" />
      <updated>1671783408745</updated>
    </task>
    <task id="LOCAL-00220" summary="하는중">
      <created>1672042122042</created>
      <option name="number" value="00220" />
      <option name="presentableId" value="LOCAL-00220" />
      <option name="project" value="LOCAL" />
      <updated>1672042122042</updated>
    </task>
    <task id="LOCAL-00221" summary="백준 17144번 미세먼지 안녕 구현 문제&#10;&#10;너무 개같아요.. 미먼의 위치를 큐에다 넣어놓고 그 미먼을 -&gt; 확산 -&gt; 흐름으로 돌리는 구조임. 중요한건 미먼 위치가 중복으로 들어오면 안되니까 잘 체크해야되고, 배열을 새로 선언해야 확산단계에서 꼬이는 걸 막아줄 수 있음.">
      <created>1672107271773</created>
      <option name="number" value="00221" />
      <option name="presentableId" value="LOCAL-00221" />
      <option name="project" value="LOCAL" />
      <updated>1672107271773</updated>
    </task>
    <task id="LOCAL-00222" summary="하는중">
      <created>1672123949611</created>
      <option name="number" value="00222" />
      <option name="presentableId" value="LOCAL-00222" />
      <option name="project" value="LOCAL" />
      <updated>1672123949611</updated>
    </task>
    <task id="LOCAL-00223" summary="하는중">
      <created>1672301350369</created>
      <option name="number" value="00223" />
      <option name="presentableId" value="LOCAL-00223" />
      <option name="project" value="LOCAL" />
      <updated>1672301350369</updated>
    </task>
    <task id="LOCAL-00224" summary="백준 1005번 ACM Craft 위상 정렬 문제&#10;&#10;기념비적인 첫 위상정렬. 위상 정렬은 사이클이 없는 그래프에서, 행동해야하는 순서를 잡아주는 것.&#10;이 문제에서는 몇번 건물을 어느 시간에 지을 수 있냐를 결정하는 문제였음.&#10;&#10;여기서 우선순위 큐 now가 해주는 역할은 현재 어떤 건물이 건설 중인지를 알려줌.시간이 가장 짧은 노드 즉 큐의 가장 앞에 있는 값이 다음으로 지어질 건물이 됨. 그걸 가지고 건물을 짓고, 그 건물이 선행조건인 다른 건물들을 다시 우선순위 큐에 집어넣어주면 계속해서 건물을 순차적으로 올릴 수 있음.">
      <created>1672376730339</created>
      <option name="number" value="00224" />
      <option name="presentableId" value="LOCAL-00224" />
      <option name="project" value="LOCAL" />
      <updated>1672376730339</updated>
    </task>
    <task id="LOCAL-00225" summary="하는중">
      <created>1672387882928</created>
      <option name="number" value="00225" />
      <option name="presentableId" value="LOCAL-00225" />
      <option name="project" value="LOCAL" />
      <updated>1672387882928</updated>
    </task>
    <task id="LOCAL-00226" summary="하는중">
      <created>1672733249727</created>
      <option name="number" value="00226" />
      <option name="presentableId" value="LOCAL-00226" />
      <option name="project" value="LOCAL" />
      <updated>1672733249728</updated>
    </task>
    <task id="LOCAL-00227" summary="하는중">
      <created>1673251411185</created>
      <option name="number" value="00227" />
      <option name="presentableId" value="LOCAL-00227" />
      <option name="project" value="LOCAL" />
      <updated>1673251411185</updated>
    </task>
    <task id="LOCAL-00228" summary="하는중">
      <created>1673338582283</created>
      <option name="number" value="00228" />
      <option name="presentableId" value="LOCAL-00228" />
      <option name="project" value="LOCAL" />
      <updated>1673338582283</updated>
    </task>
    <option name="localTasksCounter" value="229" />
    <servers />
  </component>
  <component name="Vcs.Log.History.Properties">
    <option name="COLUMN_ID_ORDER">
      <list>
        <option value="Default.Root" />
        <option value="Default.Author" />
        <option value="Default.Date" />
        <option value="Default.Subject" />
        <option value="Space.CommitStatus" />
      </list>
    </option>
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="main" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="CHECK_NEW_TODO" value="false" />
    <MESSAGE value="백준 2407번 조합 정수론&#10;&#10;100c50이 너무 크긴 함. 문자열으로 계산하면 됨. 개같이 빅---인트" />
    <MESSAGE value="백준 9465번 스티커 dp문제&#10;&#10;스티커를 뽑을 때, j - 1위치에서 사선에 위치한 j 스티커를 뽑을 수도있고,&#10;&#10;j -2 위치에서 어느 위치든 j 스티커를 뽑을 수 있다(위 아래 둘 다 선택 가능)&#10;&#10;따라서 dp[i][j] = max(dp[i - 1][j-1] , dp[i - 1][j - 2], dp[i][j - 2] + sticker[i][j]점화식이 나오게된다." />
    <MESSAGE value="백준 11404번 플로이드 플로이드 워셜 문제&#10;&#10;플로이드 워셜 연습용 문제임. 그런데 약간 비틀어서 추정 예상되는 가장 큰 비용값으로 경로 배열을 초기화하지 않고 0으로 초기화 해놓고 플로이드 워셜을 썼음. 이것도 가능은 하네 ㅇㅅㅇ;;" />
    <MESSAGE value="백준 11725번 트리의 부모 찾기 트리 문제&#10;&#10;해시로 할까 생각하다가 그냥 관둠. 스탠다드한 bfs로 풀었음." />
    <MESSAGE value="백준 13549번 숨바꼭질 3 bfs문제&#10;&#10;단순한 bfs로 풀 수 있는데 우선순위 큐를 잘 쓸것. 일단 시간 순으로 나열하되, 같은 시간일 경우 위치의 크기 순으로 나열이 되어있어야 가장 빠르게 k값에 도달할 수 있다." />
    <MESSAGE value="백준 15654번 n과 m 5 dfs문제&#10;&#10;dfs로 풀면 됨." />
    <MESSAGE value="백준 1916번 최소비용구하기 다익스트라 문제&#10;&#10;작성자님께서 ﻿﻿﻿﻿33,34번 줄에서 저장된 값이 0일 경우 입력 받은 수를 그대로 넣어주는 방식으로 코드를 짜셨는데, 이 문제에서는 버스의 비용이 0인 경우가 존재합니다. 따라서 배열에 값이 들어온 적이 없는것인지, 혹은 배열에 값이 들어왔는데 0인지를 판단할 수 없습니다. 여기서 문제가 발생한 것 같습니다.&#10;예를 들자면&#10;&#10;1 4 3&#10;&#10;1 4 0&#10;&#10;1 4 1&#10;&#10;같은 입력이 들어올 경우 원래라면 최소 비용인 0이 배열에 저장되어야하지만, 현재 코드 상으로 0이 저장된 이후에 배열에 바로 다음 값인 1이 저장되게 되므로 최소 비용을 저장하지 못합니다. 이 부분을 고치신다면 통과할 수 있으실것 같습니다.&#10;단순한 다익스트라였는데 비용을 입력받을 때 삐꾸나서 틀림." />
    <MESSAGE value="백준 2096 내려가기 dp문제&#10;&#10;아니 슬라이딩 윈도우 쓸 문제가 아닌데 어케함;;; 그냥 dp로 풀었음. 3차원 배열로 max, min을 결정함." />
    <MESSAGE value="백준 2448번 별 찍기 11 재귀 문제&#10;&#10;별 찍기 10번을 참고했음. 위 -&gt; 좌 -&gt; 우 순으로 문자열에 집어넣는 방법을 썼는데 시간초과가 나서 원래 별을 가지고 추가로 복사하는 방법을 썼음. 그리고 문자열에 문자열을 더하는거 보다 StringBuilder가 더 시간이 덜 걸리는듯." />
    <MESSAGE value="백준 9935번 문자열 폭발 스택 문제&#10;&#10;일단 문자열을 죄다 스택에 넣음. 스택 꼭다리가 폭발 문자열의 마지막 글자(패턴의 마지막)일때 폭발하는지 검사함. 스택에서 패턴만큼 비교하면서 뽑음. 이때 뽑은 갯수가 맞으면 통과 -&gt; 삭제, 아니면 통과 x -&gt; 다시 스택에 집어넣음을 반복함. 이러면 폭발 후에 합치는 것도 그렇게 걱정할 필요 없음." />
    <MESSAGE value="백준 11779 최소비용 구하기 2 다익스트라 문제&#10;&#10;아니 최소비용 구하는거 그대로 하면 되는데, 경로 추적할때 무한 루프를 돌았음.&#10;근데 무한 루프때문에 시간초과보다 메모리 초과가 더 빨리 떠서 계속 간선 메모리만 만지고 있었음. 문제는 루프에서 계속 리스트에 값을 쑤셔넣는거라서 그거 고쳤더니 통과함." />
    <MESSAGE value="백준 12851번 숨바꼭질 2 bfs문제&#10;&#10;숨바꼭질 3 코드에서 시간재는 코드 + 방문 체크를 while문 시작지점에 만들었음.(같은 시간내에 동일한 지점에 오는건 상관 없음, 더 늦게 오면 어차피 최단 거리가 아님)" />
    <MESSAGE value="백준 2638번 치즈 bfs문제&#10;&#10;외부 공기 =&gt; bfs로 1을 무시하고 0끼리 진행했을때 닿은 곳. 따라서 bfs 시작지점을 가장자리 변으로 해야(치즈가 없는 곳) 항상 외부공기라는 것을 보장할 수 있겠음. 문제가 안생김 &lt;- 여기서 처음 틀렸음.&#10;&#10;그 후에는 제거해야할 치즈들을 골라내고 다른 것은 모두 처음(과 비슷한)상태로 되돌려서 bfs를 반복하는 것이 정답 풀이가 되겠음,." />
    <MESSAGE value="백준 14052번 연구소 bfs 문제&#10;&#10;브루트포스로 풀면 됨 (시간 초과 안남. bfs만 제대로 짜면). 벽을 세워야하는 장소를 큐로 저장해놓고 큐에서 3개 뽑는 방법을 썼음. 바이러스가 있는 곳은 리스트로 저장되어있으므로 그냥 그대로 bfs 큐에 넣어서 돌리면 됨." />
    <MESSAGE value="백준 13172번 시그마 모듈러 연산 역원 구하기 문제&#10;&#10;모듈러 역원을 구함. 구하는 방법은 확장 유클리드를 재귀를 돌림. 재귀인데 일종의 dp처럼 함수가 호출될때 값이 변경되고, 그 변경 된 값을 그 전 함수에서 바로 이용가능하게끔 atomicLong을 썼음. 왜 틀렸는지는 잘 모르겠음. 아마도 확장 유클리드 함수에서 s가 음수가 됐을 때를 고쳤더니 맞은 것 같음." />
    <MESSAGE value="백준 14938번 서강그라운드 그래프 문제&#10;&#10;언럭키 다익스트라? 우선순위 큐로 거리 별로 탐색하는 알고리즘인데 bfs로 수색하게끔 만들었음. 방문이 중요한게 아니라 실제 지점의 아이템을 더했냐 안했냐가 중요한것임." />
    <MESSAGE value="백준 15657 N과 M(8) 재귀로 푼 문제&#10;&#10;스트링빌더를 재귀로 넣어서 풀었음. 중복으로 수를 뽑는게 가능하므로 재귀에서 인덱스를 상위 인덱스 그대로 받아오게끔 만들었고, 비내림차 순이므로 입력된 값은 리스트에 넣어 정렬함(우선순위 큐도 생각은 했는데 귀찮았음). 스트링빌더에서 delete나 replace 메소드는 스트링빌더의 인덱스를 기준으로 잡는데, 리스트에 입력된 값이 몇 자리 수일지는 모르기 때문에 사용하기 힘듦." />
    <MESSAGE value="백준 15663번 N과 M(9) 백트래킹 문제&#10;&#10;그냥 재귀로 풀긴했음. 중복없이 탐색해야되므로 visited 배열을 써서 리스트 내에서 중복 탐색을 막았고, hashset으로 만약 리스트 내에 중복 값이 있어 같은 결과가 출력될 경우 막을 수 있게끔 조치했음." />
    <MESSAGE value="백준 15666번 N과 M(12) 재귀로 푼 문제&#10;&#10;N과 M(8)번 소스에서 중복된 수열 출력하지 않게끔 Hashset으로 조정한게 다임." />
    <MESSAGE value="백준 15686번 치킨 배달 백트래킹 문제&#10;&#10;좌표의 절댓값 차이만큼의 거리가 있고, 각 집에서 치킨 집 까지의 최소 거리의 합산을 구하는 문제. 브루트포스로 모든 경우의 수를 찾아보는 방법을 썼는데, BFS로 할까 고민했는데 재귀로 풀었음. 재귀 과정에서 변수가 변경되는 경우를 잘 고려해야함. &lt;- 실수가 잦음." />
    <MESSAGE value="백준 16953번 A -&gt; B BFS 문제&#10;&#10;간단한 BFS로 풀 수 있는데, 다음 노드로 넘어갈때 INT 한계치를 넘어가는 경우가 있음. 이걸 LONG으로 고치면 통과" />
    <MESSAGE value="백준 17070번 파이프 옮기기 1 그래프 문제&#10;&#10;파이프를 움직이는건 움직이는건데, 파이프가 어떤 자세를 취하냐에 따라 다르게 움직일 수 있다. 따라서 파이프 자세를 가세대 세 가지로 저장해놓고 그에 맞게끔 움직일 수 있게 하면 시간초과가 난다. 따라서 (n, n)이 이미 막혀서 도달못하는 경우, x나 y 좌표가 이미 벽에 닿아있어서 특정 자세 말고는 못 움직이는 경우를 따로 떼 주니까 통과함." />
    <MESSAGE value="백준 17144번 미세먼지 안녕 구현 문제&#10;&#10;너무 개같아요.. 미먼의 위치를 큐에다 넣어놓고 그 미먼을 -&gt; 확산 -&gt; 흐름으로 돌리는 구조임. 중요한건 미먼 위치가 중복으로 들어오면 안되니까 잘 체크해야되고, 배열을 새로 선언해야 확산단계에서 꼬이는 걸 막아줄 수 있음." />
    <MESSAGE value="백준 1005번 ACM Craft 위상 정렬 문제&#10;&#10;기념비적인 첫 위상정렬. 위상 정렬은 사이클이 없는 그래프에서, 행동해야하는 순서를 잡아주는 것.&#10;이 문제에서는 몇번 건물을 어느 시간에 지을 수 있냐를 결정하는 문제였음.&#10;&#10;여기서 우선순위 큐 now가 해주는 역할은 현재 어떤 건물이 건설 중인지를 알려줌.시간이 가장 짧은 노드 즉 큐의 가장 앞에 있는 값이 다음으로 지어질 건물이 됨. 그걸 가지고 건물을 짓고, 그 건물이 선행조건인 다른 건물들을 다시 우선순위 큐에 집어넣어주면 계속해서 건물을 순차적으로 올릴 수 있음." />
    <MESSAGE value="하는중" />
    <option name="LAST_COMMIT_MESSAGE" value="하는중" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <breakpoint enabled="true" type="java-exception">
          <properties class="java.lang.ArrayIndexOutOfBoundsException" package="java.lang" />
          <option name="timeStamp" value="1" />
        </breakpoint>
        <breakpoint enabled="true" type="java-exception">
          <properties class="java.util.InputMismatchException" package="java.util" />
          <option name="timeStamp" value="2" />
        </breakpoint>
        <breakpoint enabled="true" type="java-exception">
          <properties class="java.lang.ArithmeticException" package="java.lang" />
          <option name="timeStamp" value="3" />
        </breakpoint>
        <breakpoint enabled="true" type="java-exception">
          <properties class="java.lang.IndexOutOfBoundsException" package="java.lang" />
          <option name="timeStamp" value="34" />
        </breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/DP/BitonicLis.java</url>
          <line>28</line>
          <option name="timeStamp" value="40" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/DP/BitonicLis.java</url>
          <line>22</line>
          <option name="timeStamp" value="41" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/DP/LIS.java</url>
          <line>22</line>
          <option name="timeStamp" value="103" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/DP/Tileing2.java</url>
          <line>13</line>
          <option name="timeStamp" value="135" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-line">
          <url>file://$PROJECT_DIR$/src/DFSandBFS/MinimumCost.java</url>
          <line>57</line>
          <option name="timeStamp" value="183" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-method">
          <url>file://$PROJECT_DIR$/src/GraphTheory/Cheese.java</url>
          <line>24</line>
          <properties class="GraphTheory.Cheese">
            <option name="EMULATED" value="true" />
            <option name="WATCH_EXIT" value="false" />
          </properties>
          <option name="timeStamp" value="177" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="java-method">
          <url>file://$PROJECT_DIR$/src/Main.java</url>
          <line>37</line>
          <properties class="Main" method="brute">
            <option name="EMULATED" value="true" />
            <option name="WATCH_EXIT" value="false" />
          </properties>
          <option name="timeStamp" value="212" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/Practicing_Java_and_Git$Main.ic" NAME="Main 커버리지 결과" MODIFIED="1670472243668" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/untitled$Main.ic" NAME="Main 커버리지 결과" MODIFIED="1653019956093" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>